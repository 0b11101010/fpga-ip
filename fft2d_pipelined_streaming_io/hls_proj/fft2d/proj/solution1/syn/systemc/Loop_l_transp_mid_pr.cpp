// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Loop_l_transp_mid_pr.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Loop_l_transp_mid_pr::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Loop_l_transp_mid_pr::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> Loop_l_transp_mid_pr::ap_ST_fsm_state1 = "1";
const sc_lv<3> Loop_l_transp_mid_pr::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> Loop_l_transp_mid_pr::ap_ST_fsm_state5 = "100";
const sc_lv<32> Loop_l_transp_mid_pr::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool Loop_l_transp_mid_pr::ap_const_boolean_1 = true;
const sc_lv<32> Loop_l_transp_mid_pr::ap_const_lv32_1 = "1";
const bool Loop_l_transp_mid_pr::ap_const_boolean_0 = false;
const sc_lv<1> Loop_l_transp_mid_pr::ap_const_lv1_0 = "0";
const sc_lv<1> Loop_l_transp_mid_pr::ap_const_lv1_1 = "1";
const sc_lv<11> Loop_l_transp_mid_pr::ap_const_lv11_0 = "00000000000";
const sc_lv<6> Loop_l_transp_mid_pr::ap_const_lv6_0 = "000000";
const sc_lv<11> Loop_l_transp_mid_pr::ap_const_lv11_400 = "10000000000";
const sc_lv<11> Loop_l_transp_mid_pr::ap_const_lv11_1 = "1";
const sc_lv<6> Loop_l_transp_mid_pr::ap_const_lv6_20 = "100000";
const sc_lv<6> Loop_l_transp_mid_pr::ap_const_lv6_1 = "1";
const sc_lv<5> Loop_l_transp_mid_pr::ap_const_lv5_0 = "00000";
const sc_lv<32> Loop_l_transp_mid_pr::ap_const_lv32_2 = "10";

Loop_l_transp_mid_pr::Loop_l_transp_mid_pr(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln142_1_fu_156_p2);
    sensitive << ( ap_phi_mux_i2_0_phi_fu_110_p4 );

    SC_METHOD(thread_add_ln142_fu_136_p2);
    sensitive << ( indvar_flatten_reg_95 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( xk_mid_row_fifo_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln142_reg_202 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( xk_mid_row_fifo_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln142_reg_202 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( xk_mid_row_fifo_V_empty_n );
    sensitive << ( icmp_ln142_reg_202 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln142_fu_130_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_phi_mux_i2_0_phi_fu_110_p4);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( i2_0_reg_106 );
    sensitive << ( icmp_ln142_reg_202_pp0_iter1_reg );
    sensitive << ( select_ln144_1_reg_211 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_phi_mux_j3_0_phi_fu_122_p4);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( j3_0_reg_118 );
    sensitive << ( icmp_ln142_reg_202_pp0_iter1_reg );
    sensitive << ( j_reg_226 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_arr0_address1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( zext_ln149_fu_198_p1 );

    SC_METHOD(thread_arr0_ce1);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_arr0_d1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_3_reg_221 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_arr0_we1);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln142_reg_202_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_icmp_ln142_fu_130_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_reg_95 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln144_fu_142_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln142_reg_202 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_j3_0_phi_fu_122_p4 );

    SC_METHOD(thread_index_fu_186_p2);
    sensitive << ( zext_ln144_fu_170_p1 );
    sensitive << ( shl_ln_fu_178_p3 );

    SC_METHOD(thread_j_fu_192_p2);
    sensitive << ( select_ln144_fu_148_p3 );

    SC_METHOD(thread_select_ln144_1_fu_162_p3);
    sensitive << ( ap_phi_mux_i2_0_phi_fu_110_p4 );
    sensitive << ( icmp_ln144_fu_142_p2 );
    sensitive << ( add_ln142_1_fu_156_p2 );

    SC_METHOD(thread_select_ln144_fu_148_p3);
    sensitive << ( ap_phi_mux_j3_0_phi_fu_122_p4 );
    sensitive << ( icmp_ln144_fu_142_p2 );

    SC_METHOD(thread_shl_ln_fu_178_p3);
    sensitive << ( trunc_ln148_fu_174_p1 );

    SC_METHOD(thread_trunc_ln148_fu_174_p1);
    sensitive << ( select_ln144_fu_148_p3 );

    SC_METHOD(thread_xk_mid_row_fifo_V_blk_n);
    sensitive << ( xk_mid_row_fifo_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln142_reg_202 );

    SC_METHOD(thread_xk_mid_row_fifo_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln142_reg_202 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_zext_ln144_fu_170_p1);
    sensitive << ( select_ln144_1_fu_162_p3 );

    SC_METHOD(thread_zext_ln149_fu_198_p1);
    sensitive << ( index_reg_216 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln142_fu_130_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Loop_l_transp_mid_pr_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, xk_mid_row_fifo_V_dout, "(port)xk_mid_row_fifo_V_dout");
    sc_trace(mVcdFile, xk_mid_row_fifo_V_empty_n, "(port)xk_mid_row_fifo_V_empty_n");
    sc_trace(mVcdFile, xk_mid_row_fifo_V_read, "(port)xk_mid_row_fifo_V_read");
    sc_trace(mVcdFile, arr0_address1, "(port)arr0_address1");
    sc_trace(mVcdFile, arr0_ce1, "(port)arr0_ce1");
    sc_trace(mVcdFile, arr0_we1, "(port)arr0_we1");
    sc_trace(mVcdFile, arr0_d1, "(port)arr0_d1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, xk_mid_row_fifo_V_blk_n, "xk_mid_row_fifo_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln142_reg_202, "icmp_ln142_reg_202");
    sc_trace(mVcdFile, indvar_flatten_reg_95, "indvar_flatten_reg_95");
    sc_trace(mVcdFile, i2_0_reg_106, "i2_0_reg_106");
    sc_trace(mVcdFile, j3_0_reg_118, "j3_0_reg_118");
    sc_trace(mVcdFile, icmp_ln142_fu_130_p2, "icmp_ln142_fu_130_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln142_reg_202_pp0_iter1_reg, "icmp_ln142_reg_202_pp0_iter1_reg");
    sc_trace(mVcdFile, add_ln142_fu_136_p2, "add_ln142_fu_136_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, select_ln144_1_fu_162_p3, "select_ln144_1_fu_162_p3");
    sc_trace(mVcdFile, select_ln144_1_reg_211, "select_ln144_1_reg_211");
    sc_trace(mVcdFile, index_fu_186_p2, "index_fu_186_p2");
    sc_trace(mVcdFile, index_reg_216, "index_reg_216");
    sc_trace(mVcdFile, tmp_3_reg_221, "tmp_3_reg_221");
    sc_trace(mVcdFile, j_fu_192_p2, "j_fu_192_p2");
    sc_trace(mVcdFile, j_reg_226, "j_reg_226");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_phi_mux_i2_0_phi_fu_110_p4, "ap_phi_mux_i2_0_phi_fu_110_p4");
    sc_trace(mVcdFile, ap_phi_mux_j3_0_phi_fu_122_p4, "ap_phi_mux_j3_0_phi_fu_122_p4");
    sc_trace(mVcdFile, zext_ln149_fu_198_p1, "zext_ln149_fu_198_p1");
    sc_trace(mVcdFile, icmp_ln144_fu_142_p2, "icmp_ln144_fu_142_p2");
    sc_trace(mVcdFile, add_ln142_1_fu_156_p2, "add_ln142_1_fu_156_p2");
    sc_trace(mVcdFile, select_ln144_fu_148_p3, "select_ln144_fu_148_p3");
    sc_trace(mVcdFile, trunc_ln148_fu_174_p1, "trunc_ln148_fu_174_p1");
    sc_trace(mVcdFile, zext_ln144_fu_170_p1, "zext_ln144_fu_170_p1");
    sc_trace(mVcdFile, shl_ln_fu_178_p3, "shl_ln_fu_178_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

Loop_l_transp_mid_pr::~Loop_l_transp_mid_pr() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void Loop_l_transp_mid_pr::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln142_reg_202_pp0_iter1_reg.read()))) {
        i2_0_reg_106 = select_ln144_1_reg_211.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        i2_0_reg_106 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln142_fu_130_p2.read()))) {
        indvar_flatten_reg_95 = add_ln142_fu_136_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        indvar_flatten_reg_95 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln142_reg_202_pp0_iter1_reg.read()))) {
        j3_0_reg_118 = j_reg_226.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        j3_0_reg_118 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln142_reg_202 = icmp_ln142_fu_130_p2.read();
        icmp_ln142_reg_202_pp0_iter1_reg = icmp_ln142_reg_202.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(icmp_ln142_reg_202.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        index_reg_216 = index_fu_186_p2.read();
        tmp_3_reg_221 = xk_mid_row_fifo_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(icmp_ln142_reg_202.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        j_reg_226 = j_fu_192_p2.read();
        select_ln144_1_reg_211 = select_ln144_1_fu_162_p3.read();
    }
}

void Loop_l_transp_mid_pr::thread_add_ln142_1_fu_156_p2() {
    add_ln142_1_fu_156_p2 = (!ap_const_lv6_1.is_01() || !ap_phi_mux_i2_0_phi_fu_110_p4.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1) + sc_biguint<6>(ap_phi_mux_i2_0_phi_fu_110_p4.read()));
}

void Loop_l_transp_mid_pr::thread_add_ln142_fu_136_p2() {
    add_ln142_fu_136_p2 = (!indvar_flatten_reg_95.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(indvar_flatten_reg_95.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void Loop_l_transp_mid_pr::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void Loop_l_transp_mid_pr::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Loop_l_transp_mid_pr::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[2];
}

void Loop_l_transp_mid_pr::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_l_transp_mid_pr::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(icmp_ln142_reg_202.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, xk_mid_row_fifo_V_empty_n.read()));
}

void Loop_l_transp_mid_pr::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(icmp_ln142_reg_202.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, xk_mid_row_fifo_V_empty_n.read()));
}

void Loop_l_transp_mid_pr::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void Loop_l_transp_mid_pr::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_l_transp_mid_pr::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = (esl_seteq<1,1,1>(icmp_ln142_reg_202.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, xk_mid_row_fifo_V_empty_n.read()));
}

void Loop_l_transp_mid_pr::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_l_transp_mid_pr::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln142_fu_130_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void Loop_l_transp_mid_pr::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Loop_l_transp_mid_pr::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Loop_l_transp_mid_pr::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Loop_l_transp_mid_pr::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Loop_l_transp_mid_pr::thread_ap_phi_mux_i2_0_phi_fu_110_p4() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln142_reg_202_pp0_iter1_reg.read()))) {
        ap_phi_mux_i2_0_phi_fu_110_p4 = select_ln144_1_reg_211.read();
    } else {
        ap_phi_mux_i2_0_phi_fu_110_p4 = i2_0_reg_106.read();
    }
}

void Loop_l_transp_mid_pr::thread_ap_phi_mux_j3_0_phi_fu_122_p4() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln142_reg_202_pp0_iter1_reg.read()))) {
        ap_phi_mux_j3_0_phi_fu_122_p4 = j_reg_226.read();
    } else {
        ap_phi_mux_j3_0_phi_fu_122_p4 = j3_0_reg_118.read();
    }
}

void Loop_l_transp_mid_pr::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Loop_l_transp_mid_pr::thread_arr0_address1() {
    arr0_address1 =  (sc_lv<10>) (zext_ln149_fu_198_p1.read());
}

void Loop_l_transp_mid_pr::thread_arr0_ce1() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        arr0_ce1 = ap_const_logic_1;
    } else {
        arr0_ce1 = ap_const_logic_0;
    }
}

void Loop_l_transp_mid_pr::thread_arr0_d1() {
    arr0_d1 = tmp_3_reg_221.read();
}

void Loop_l_transp_mid_pr::thread_arr0_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln142_reg_202_pp0_iter1_reg.read()))) {
        arr0_we1 = ap_const_logic_1;
    } else {
        arr0_we1 = ap_const_logic_0;
    }
}

void Loop_l_transp_mid_pr::thread_icmp_ln142_fu_130_p2() {
    icmp_ln142_fu_130_p2 = (!indvar_flatten_reg_95.read().is_01() || !ap_const_lv11_400.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_95.read() == ap_const_lv11_400);
}

void Loop_l_transp_mid_pr::thread_icmp_ln144_fu_142_p2() {
    icmp_ln144_fu_142_p2 = (!ap_phi_mux_j3_0_phi_fu_122_p4.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_j3_0_phi_fu_122_p4.read() == ap_const_lv6_20);
}

void Loop_l_transp_mid_pr::thread_index_fu_186_p2() {
    index_fu_186_p2 = (!zext_ln144_fu_170_p1.read().is_01() || !shl_ln_fu_178_p3.read().is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln144_fu_170_p1.read()) + sc_biguint<10>(shl_ln_fu_178_p3.read()));
}

void Loop_l_transp_mid_pr::thread_j_fu_192_p2() {
    j_fu_192_p2 = (!ap_const_lv6_1.is_01() || !select_ln144_fu_148_p3.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1) + sc_biguint<6>(select_ln144_fu_148_p3.read()));
}

void Loop_l_transp_mid_pr::thread_select_ln144_1_fu_162_p3() {
    select_ln144_1_fu_162_p3 = (!icmp_ln144_fu_142_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln144_fu_142_p2.read()[0].to_bool())? add_ln142_1_fu_156_p2.read(): ap_phi_mux_i2_0_phi_fu_110_p4.read());
}

void Loop_l_transp_mid_pr::thread_select_ln144_fu_148_p3() {
    select_ln144_fu_148_p3 = (!icmp_ln144_fu_142_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln144_fu_142_p2.read()[0].to_bool())? ap_const_lv6_0: ap_phi_mux_j3_0_phi_fu_122_p4.read());
}

void Loop_l_transp_mid_pr::thread_shl_ln_fu_178_p3() {
    shl_ln_fu_178_p3 = esl_concat<5,5>(trunc_ln148_fu_174_p1.read(), ap_const_lv5_0);
}

void Loop_l_transp_mid_pr::thread_trunc_ln148_fu_174_p1() {
    trunc_ln148_fu_174_p1 = select_ln144_fu_148_p3.read().range(5-1, 0);
}

void Loop_l_transp_mid_pr::thread_xk_mid_row_fifo_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln142_reg_202.read(), ap_const_lv1_0))) {
        xk_mid_row_fifo_V_blk_n = xk_mid_row_fifo_V_empty_n.read();
    } else {
        xk_mid_row_fifo_V_blk_n = ap_const_logic_1;
    }
}

void Loop_l_transp_mid_pr::thread_xk_mid_row_fifo_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln142_reg_202.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        xk_mid_row_fifo_V_read = ap_const_logic_1;
    } else {
        xk_mid_row_fifo_V_read = ap_const_logic_0;
    }
}

void Loop_l_transp_mid_pr::thread_zext_ln144_fu_170_p1() {
    zext_ln144_fu_170_p1 = esl_zext<10,6>(select_ln144_1_fu_162_p3.read());
}

void Loop_l_transp_mid_pr::thread_zext_ln149_fu_198_p1() {
    zext_ln149_fu_198_p1 = esl_zext<64,10>(index_reg_216.read());
}

void Loop_l_transp_mid_pr::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln142_fu_130_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln142_fu_130_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

